{"version":3,"file":"component---src-pages-index-js-b30c9021c7daefdbbd6e.js","mappings":"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","sources":["webpack://sc_test/./node_modules/camelcase/index.js","webpack://sc_test/../src/image-utils.ts","webpack://sc_test/../src/components/hooks.ts","webpack://sc_test/../src/components/layout-wrapper.tsx","webpack://sc_test/../src/components/picture.tsx","webpack://sc_test/../src/components/placeholder.tsx","webpack://sc_test/../src/components/main-image.tsx","webpack://sc_test/../src/components/gatsby-image.server.tsx","webpack://sc_test/../src/components/gatsby-image.browser.tsx","webpack://sc_test/../src/components/static-image.server.tsx","webpack://sc_test/../src/components/static-image.tsx","webpack://sc_test/./node_modules/styled-reset/lib/esm/index.js","webpack://sc_test/./src/components/styles/Theme.js","webpack://sc_test/./src/components/styles/GlobalStyles.js","webpack://sc_test/./src/components/styles/Typography.js","webpack://sc_test/./src/components/Layout.js","webpack://sc_test/./src/components/Navigation/NavigationStyles.js","webpack://sc_test/./src/components/Navigation/Navigation.js","webpack://sc_test/./src/components/styles/ButtonStyles.js","webpack://sc_test/./src/components/styles/Animations.js","webpack://sc_test/./src/components/Header/HeaderStyles.js","webpack://sc_test/./src/images/forest_transparent.png","webpack://sc_test/./src/images/rock-mountaineern-right.png","webpack://sc_test/./src/images/bg.jpg","webpack://sc_test/./src/components/Header/Header.js","webpack://sc_test/./src/components/styles/HeadingStyles.js","webpack://sc_test/./src/components/Campaign/SectionCampaignStyles.js","webpack://sc_test/./node_modules/styled-react-modal/build/mjs/index.mjs","webpack://sc_test/./src/components/Campaign/PopupStyles.js","webpack://sc_test/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://sc_test/./src/components/Campaign/Popup.js","webpack://sc_test/./src/components/Campaign/SectionCampaign.js","webpack://sc_test/./src/components/Features/SectionFeaturesStyles.js","webpack://sc_test/./src/components/styles/UMarginsStyles.js","webpack://sc_test/./src/components/Features/SectionFeatures.js","webpack://sc_test/./src/components/About/SectionAboutStyles.js","webpack://sc_test/./src/components/About/SectionAbout.js","webpack://sc_test/./src/components/Book/SectionBookStyles.js","webpack://sc_test/./src/components/Book/SectionBook.js","webpack://sc_test/./src/components/Story/SectionStoriesStyles.js","webpack://sc_test/./src/components/styles/RowColumnStyles.js","webpack://sc_test/./src/components/Story/SectionStories.js","webpack://sc_test/./src/components/Footer/FooterStyles.js","webpack://sc_test/./src/components/Footer/Footer.js","webpack://sc_test/./src/pages/index.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport { css, createGlobalStyle } from 'styled-components';\n// prettier-ignore\nexport var reset = css(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n/* http://meyerweb.com/eric/tools/css/reset/\\n   v5.0.1 | 20191019\\n   License: none (public domain)\\n*/\\n\\nhtml, body, div, span, applet, object, iframe,\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\na, abbr, acronym, address, big, cite, code,\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\nsmall, strike, strong, sub, sup, tt, var,\\nb, u, i, center,\\ndl, dt, dd, menu, ol, ul, li,\\nfieldset, form, label, legend,\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\narticle, aside, canvas, details, embed,\\nfigure, figcaption, footer, header, hgroup,\\nmain, menu, nav, output, ruby, section, summary,\\ntime, mark, audio, video {\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-size: 100%;\\n  font: inherit;\\n  vertical-align: baseline;\\n}\\n/* HTML5 display-role reset for older browsers */\\narticle, aside, details, figcaption, figure,\\nfooter, header, hgroup, main, menu, nav, section {\\n  display: block;\\n}\\n/* HTML5 hidden-attribute fix for newer browsers */\\n*[hidden] {\\n    display: none;\\n}\\nbody {\\n  line-height: 1;\\n}\\nmenu, ol, ul {\\n  list-style: none;\\n}\\nblockquote, q {\\n  quotes: none;\\n}\\nblockquote:before, blockquote:after,\\nq:before, q:after {\\n  content: '';\\n  content: none;\\n}\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n}\\n\"], [\"\\n/* http://meyerweb.com/eric/tools/css/reset/\\n   v5.0.1 | 20191019\\n   License: none (public domain)\\n*/\\n\\nhtml, body, div, span, applet, object, iframe,\\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\\na, abbr, acronym, address, big, cite, code,\\ndel, dfn, em, img, ins, kbd, q, s, samp,\\nsmall, strike, strong, sub, sup, tt, var,\\nb, u, i, center,\\ndl, dt, dd, menu, ol, ul, li,\\nfieldset, form, label, legend,\\ntable, caption, tbody, tfoot, thead, tr, th, td,\\narticle, aside, canvas, details, embed,\\nfigure, figcaption, footer, header, hgroup,\\nmain, menu, nav, output, ruby, section, summary,\\ntime, mark, audio, video {\\n  margin: 0;\\n  padding: 0;\\n  border: 0;\\n  font-size: 100%;\\n  font: inherit;\\n  vertical-align: baseline;\\n}\\n/* HTML5 display-role reset for older browsers */\\narticle, aside, details, figcaption, figure,\\nfooter, header, hgroup, main, menu, nav, section {\\n  display: block;\\n}\\n/* HTML5 hidden-attribute fix for newer browsers */\\n*[hidden] {\\n    display: none;\\n}\\nbody {\\n  line-height: 1;\\n}\\nmenu, ol, ul {\\n  list-style: none;\\n}\\nblockquote, q {\\n  quotes: none;\\n}\\nblockquote:before, blockquote:after,\\nq:before, q:after {\\n  content: '';\\n  content: none;\\n}\\ntable {\\n  border-collapse: collapse;\\n  border-spacing: 0;\\n}\\n\"])));\nexport var Reset = createGlobalStyle(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\", \"\"], [\"\", \"\"])), reset);\nexport default reset;\nvar templateObject_1, templateObject_2;\n","// Theme.js\n\nexport const breakpoints = {\n  phone: '37.5em', // 600px\n  tabletPortrait: '56.25em', // 900px\n  tabletLandscape: '75em', // 1200px\n  bigDesktop: '112.5em', // 1800px\n}\n\nexport const theme = {\n  colors: {\n    scrumhrBlue: '#002f5f',\n    navyBlue: '#001f3f',\n    lightBlue: '#add8e6',\n  },\n  breakpoints, // Add your other theme variables here\n}\n","// GlobalStyles.js\nimport { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\nimport { theme } from './Theme' // Import the theme\n\nconst GlobalStyles = createGlobalStyle`\n  ${reset}\n\n  /* GlobalStyles */\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: 62.5%;\n    scroll-behavior: smooth;\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n\n    @media screen and (max-width: ${theme.breakpoints.tabletLandscape}) {\n    font-size: 56.25%; /* 900px */\n  }\n\n  @media screen and (max-width: ${theme.breakpoints.tabletPortrait}) {\n    font-size: 50%; /* 600px */\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.bigDesktop}) {\n    font-size: 75%; /* 1800px */\n  }\n}\n\n  body {\n    box-sizing: border-box;\n    padding: 3rem;\n    background-image: linear-gradient(\n    to right,\n    #96c3e8,\n    ${(props) => props.theme.colors.scrumhrBlue}\n  );\n\n\n    @media screen and (max-width: ${theme.breakpoints.tabletPortrait}) {\n      padding: 0;\n    }\n  }\n\n  ::selection {\n    background-color: ${theme.colors.scrumhrBlue};\n    color: #fff;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  body {\n    font-family: \"Lato\", sans-serif;\n    font-weight: 400;\n    line-height: 1.7;\n    color: #777;\n  }\n`\n\nexport { GlobalStyles }\n","import { createGlobalStyle } from 'styled-components'\n\nconst Typography = createGlobalStyle`\n  /* Typography styles */\n\n  /* Your other font styles go here */\n\n  /* For example, you can define your base font styles */\n  body {\n    font-family: \"Lato\", sans-serif;\n    font-weight: 400;\n    line-height: 1.7;\n    color: #777;\n  }\n`\n\nexport default Typography\n","// layout.js\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { ThemeProvider } from 'styled-components'\nimport { GlobalStyles } from './styles/GlobalStyles'\nimport Typography from './styles/Typography'\nimport { theme } from './styles/Theme'\n// import { PageStyles } from './styles/PageStyles';\n\nimport './styles/iconFont.css'\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <Head title={siteTitle} />\n        <GlobalStyles />\n        <Typography />\n        {children}\n      </>\n    </ThemeProvider>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\n// Define Head function to set the title\nconst Head = ({ title }) => <title>{title}</title>\n\nexport default Layout\n","// NavigationStyles.js with refactored code for styled components\n\nimport styled from 'styled-components'\n\nexport const NavigationContainer = styled.div`\n  position: fixed;\n  top: 6rem;\n  right: 6rem;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  z-index: 2000;\n`\n\nexport const Checkbox = styled.input`\n  display: none;\n`\n\n// Button styled component\nexport const Button = styled.label`\n  background-color: #fff;\n  height: 7rem;\n  width: 7rem;\n  position: fixed;\n  top: 6rem;\n  right: 6rem;\n  border-radius: 50%;\n  z-index: 2001; // Make sure this is above the Background z-index\n  box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.1);\n  text-align: center;\n  cursor: pointer;\n  htmlfor: 'navi-toggle'; // This should correspond to the id of the Checkbox component\n\n  // Adjust button position for different screen sizes\n  @media only screen and (max-width: 56.25em) {\n    top: 4rem;\n    right: 4rem;\n  }\n\n  @media only screen and (max-width: 37.5em) {\n    top: 3rem;\n    right: 3rem;\n  }\n`\n\n// Icon styled component\nexport const Icon = styled.span`\n  position: relative;\n  display: block;\n  width: 3rem; // Set a specific width for the icon\n  height: 2px; // Set a specific height for the central bar\n  background-color: ${(props) => props.theme.colors.scrumhrBlue};\n  margin-top: 3.5rem;\n  margin-left: 2rem; // Center the icon horizontally in the button\n  transition: all 0.2s;\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: 3rem;\n    height: 2px;\n    background-color: ${(props) => props.theme.colors.scrumhrBlue};\n    left: 0;\n    transition: all 0.2s;\n  }\n\n  // Top bar\n  &::before {\n    top: -0.8rem;\n    transform: ${(props) =>\n      props.isChecked ? 'translateY(0.8rem) rotate(135deg)' : 'none'};\n  }\n\n  // Middle bar disappears when menu is open\n  background-color: ${(props) =>\n    props.isChecked ? 'transparent' : props.theme.colors.scrumhrBlue};\n\n  // Bottom bar\n  &::after {\n    top: 0.8rem;\n    transform: ${(props) =>\n      props.isChecked ? 'translateY(-0.8rem) rotate(-135deg)' : 'none'};\n  }\n`\n\nexport const Background = styled.div`\n  height: 6rem;\n  width: 6rem;\n  border-radius: 50%;\n  position: fixed;\n  top: 6.5rem; // Half rem more than Button to be centered behind it\n  right: 6.5rem; // Same here\n  background-image: radial-gradient(#96c3e8, #002f5f);\n  z-index: 1000; // Ensure this is below the Button z-index\n  transition: transform 0.8s cubic-bezier(0.86, 0, 0.07, 1);\n  transform: ${(props) => (props.isChecked ? 'scale(80)' : 'scale(1)')};\n\n  // Add media queries to adjust position on smaller screens\n  @media only screen and (max-width: 56.25em) {\n    top: 4.5rem;\n    right: 4.5rem;\n  }\n\n  @media only screen and (max-width: 37.5em) {\n    top: 3.5rem;\n    right: 3.5rem;\n  }\n`\n\nexport const Nav = styled.nav`\n  height: 100vh;\n\n  top: 0;\n  left: 0;\n  z-index: 1500;\n  opacity: ${(props) => (props.isChecked ? '1' : '0')};\n  width: ${(props) => (props.isChecked ? '100%' : '0')};\n  transition: opacity 0.8s, width 0.8s;\n`\n\nexport const List = styled.ul`\n  position: absolute;\n  // top: 50%;\n  // left: 50%;\n  // transform: translate(-50%, -50%);\n  list-style: none;\n  text-align: center;\n  // width: 100%;\n`\n\nexport const Item = styled.li`\n  margin: 1rem;\n`\n\nexport const StyledLink = styled.a`\n  // display: inline-block;\n  // font-size: 3rem;\n  // font-weight: 300;\n  // padding: 1rem 2rem;\n  // color: #fff;\n  // text-decoration: none;\n  // text-transform: uppercase;\n  // background-image: linear-gradient(\n  //   120deg,\n  //   transparent 0%,\n  //   transparent 50%,\n  //   #fff 50%\n  // );\n  // background-size: 220%;\n  // transition: all 0.4s;\n  &:hover,\n  &:active {\n    background-position: 100%;\n    color: ${(props) => props.theme.colors.scrumhrBlue}; // Use theme color\n    transform: translateX(1rem);\n  }\n  span {\n    margin-right: 1.5rem;\n    display: inline-block;\n  }\n`\n\n// Add any additional necessary styles for transitions or positioning\n","import React, { useState } from 'react'\nimport {\n  NavigationContainer,\n  Button,\n  Background,\n  Nav,\n  List,\n  Item,\n  StyledLink,\n  Checkbox,\n  Icon,\n} from './NavigationStyles'\n\nconst Navigation = () => {\n  const [isChecked, setIsChecked] = useState(false)\n\n  const handleCheckboxChange = () => {\n    setIsChecked(!isChecked)\n  }\n\n  const menuItems = [\n    { href: '#section-campaigns', text: 'Pågeånde kampanjer' },\n    { href: '#section-services', text: 'Våra tjänster' },\n    { href: '#section-about', text: 'Om ScrumHR' },\n    { href: '#section-stories', text: 'Nöjda kunder' },\n    { href: '#section-book', text: 'Kontakta oss' },\n    { href: '#section-contact-info', text: 'Kontakt info' },\n    // ... add more items here\n  ]\n\n  return (\n    <NavigationContainer>\n      <Checkbox\n        type='checkbox'\n        id='navi-toggle'\n        checked={isChecked}\n        onChange={handleCheckboxChange}\n      />\n      <Button htmlFor='navi-toggle'>\n        <Icon isChecked={isChecked} />\n      </Button>\n      <Background isChecked={isChecked} />\n      <Nav isChecked={isChecked}>\n        <List>\n          {menuItems.map((item, index) => (\n            <Item key={index}>\n              <StyledLink\n                href={item.href}\n                onClick={handleCheckboxChange}\n              >\n                <span>{String(index + 1).padStart(2, '0')}</span>\n                {item.text}\n              </StyledLink>\n            </Item>\n          ))}\n        </List>\n      </Nav>\n    </NavigationContainer>\n  )\n}\n\nexport default Navigation\n","import styled, { css } from 'styled-components'\n\nconst buttonBaseStyles = css`\n  text-transform: uppercase;\n  text-decoration: none;\n  padding: 1.5rem 4rem;\n  display: inline-block;\n  border-radius: 10rem;\n  transition: all 0.2s;\n  position: relative;\n  font-size: 1.6rem;\n  border: none;\n  cursor: pointer;\n  margin-top: 4rem;\n`\n\nconst ButtonStyles = styled.a`\n  ${buttonBaseStyles}\n\n  ${({ theme }) => {\n    const themeColors = theme.colors || {}\n\n    return css`\n      background-color: ${themeColors.scrumhrBlue ||\n      theme.colors.scrumhrBlue ||\n      '#fff'};\n      color: #fff;\n\n      &:after {\n        background-color: ${themeColors.scrumhrBlue ||\n        theme.colors.scrumhrBlue ||\n        '#fff'};\n      }\n    `\n  }}\n\n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);\n\n    &::after {\n      transform: scaleX(1.4) scaleY(1.6);\n      opacity: 0;\n    }\n  }\n\n  &:active,\n  &:focus {\n    outline: none;\n    transform: translateY(-1px);\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);\n  }\n\n  &.btn--white {\n    background-color: #fff;\n    color: #777;\n\n    &::after {\n      background-color: #fff;\n    }\n  }\n\n  &.btn--green {\n    background-color: #55c57a;\n    color: #fff;\n\n    &::after {\n      background-color: #55c57a;\n    }\n  }\n\n  &::after {\n    content: '';\n    display: inline-block;\n    height: 100%;\n    width: 100%;\n    border-radius: 10rem;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: -1;\n    transition: all 0.4s;\n  }\n\n  &.btn--animated {\n    animation: moveInBottom 0.5s ease-out 0.75s;\n    animation-fill-mode: backwards;\n  }\n\n  &.btn-text:link,\n  &.btn-text:visited {\n    font-size: 1.6rem;\n    color: #55c57a;\n    display: inline-block;\n    text-decoration: none;\n    border-bottom: 1px solid #55c57a;\n    padding: 3px;\n    transition: all 0.2s;\n\n    &:hover {\n      background-color: #55c57a;\n      color: #fff;\n      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);\n      transform: translateY(-2px);\n    }\n\n    &:active {\n      box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n      transform: translateY(0);\n    }\n  }\n`\n\nexport default ButtonStyles\n","import { keyframes } from 'styled-components'\n\nexport const moveInLeft = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateX(-10rem);\n  }\n  80% {\n    transform: translateX(1rem);\n  }\n  100% {\n    opacity: 1;\n    transform: translate(0);\n  }\n`\n\nexport const moveInRight = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateX(10rem);\n  }\n  80% {\n    transform: translateX(-1rem);\n  }\n  100% {\n    opacity: 1;\n    transform: translate(0);\n  }\n`\n\nexport const moveInBottom = keyframes`\n  0% {\n    opacity: 0;\n    transform: translateY(3rem);\n  }\n  100% {\n    opacity: 1;\n    transform: translate(0);\n  }\n`\n","import styled from 'styled-components'\nimport OriginalButtonStyles from '../styles/ButtonStyles'\nimport { moveInLeft, moveInRight } from '../styles/Animations'\n\nexport const ParallaxContainer = styled.div`\n  display: grid;\n  grid-template-areas:\n    'header header header'\n    'main main main'\n    'button button button';\n  grid-template-rows: 1fr 1fr 1fr;\n  grid-template-columns: repeat(3, 1fr);\n  position: relative; // Needed for absolute positioning of children\n\n  /* Apply the clip-path for supporting browsers */\n  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {\n    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);\n    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);\n    height: 85vh;\n  }\n\n  /* High resolution and large-screen devices */\n  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),\n    only screen and (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),\n    only screen and (min-width: 125em) {\n    background-image: linear-gradient(\n        to right bottom,\n        rgba(126, 213, 111, 0.1),\n        rgba(40, 112, 200, 0.8)\n      ),\n      url('../images/bg.jpg');\n  }\n\n  /* Smaller devices */\n  @media only screen and (max-width: 37.5em) {\n    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);\n    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);\n  }\n`\n\nexport const ParallaxBackground = styled.div`\n  grid-area: 1 / 1 / -1 / -1; // Cover all rows and columns\n  background: ${(props) => `url(${props.bgImage}) no-repeat center center`};\n  background-size: cover;\n  background-attachment: fixed;\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1; // Behind all other content\n`\n\nexport const ParallaxLayerForest = styled.img`\n  grid-area: 3 / 1 / 4 / -1; // Cover the bottom row and all columns\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  z-index: 0; // Above the background but below the rock image\n`\n\nexport const ParallaxLayerRock = styled.img`\n  grid-area: 3 / 1 / 4 / -1; // Same grid area as forestImage\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  z-index: 1; // Above the forest image\n`\n\nexport const HeaderLogoBox = styled.div`\n  grid-area: header;\n  align-self: start;\n  justify-self: start;\n  padding: 4rem;\n  z-index: 10;\n`\n\nexport const HeaderTextBox = styled.div`\n  grid-area: main;\n  align-self: end;\n  justify-self: center;\n  z-index: 10;\n  color: white;\n  /* background-color: rgba(\n    255,\n    255,\n    255,\n    0.1\n  ); // Semi-transparent white background\n  padding: 0.2rem 0.5rem;\n  border-radius: 5px;\n  backdrop-filter: blur(10px); // Adding the blur effect\n  border: 1px solid rgba(255, 255, 255, 0.2); // Subtle border for reflective edge\n  text-shadow: 2px 2px 3px ${(props) =>\n    props.theme.colors.scrumhrBlue}; // Text shadow using scrumhrBlue */\n`\n\nexport const HeadingPrimaryMain = styled.h1`\n  text-align: center;\n  font-size: 6rem;\n  font-weight: 400;\n  letter-spacing: 1.5rem;\n  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5), 0 -1px 0 rgba(255, 255, 255, 0.2),\n    2px 2px 2px rgba(0, 0, 0, 0.5);\n  animation: ${moveInRight} 1s ease-out;\n\n  @media only screen and (max-width: 37.5em) {\n    letter-spacing: 1rem;\n    font-size: 3rem; // Adjusted to correct property\n  }\n`\n\nexport const HeadingPrimarySub = styled.div`\n  text-align: center;\n  font-size: 2rem;\n  font-weight: 700;\n  animation: ${moveInLeft} 1s ease-out;\n`\n\nexport const ButtonStyles = styled(OriginalButtonStyles)`\n  grid-area: button;\n  align-self: start;\n  justify-self: center;\n  z-index: 10;\n\n  &:hover::after {\n    background-color: ${({ theme }) => theme.colors.lightBlue || '#add8e6'};\n    transform: scaleX(1.4) scaleY(1.6);\n  }\n`\n","export default __webpack_public_path__ + \"static/forest_transparent-b104319df5118cc539c9237abd091dbf.png\";","export default __webpack_public_path__ + \"static/rock-mountaineern-right-e173536530c6b3826c80576e7a9aec3f.png\";","export default __webpack_public_path__ + \"static/bg-dd64ddf5e80e93408160f381114eb4e8.jpg\";","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport {\n  ParallaxContainer,\n  ParallaxBackground,\n  ParallaxLayerForest,\n  ParallaxLayerRock,\n  HeaderLogoBox,\n  HeaderTextBox,\n  HeadingPrimaryMain,\n  HeadingPrimarySub,\n  ButtonStyles,\n} from './HeaderStyles' // Update the import paths as necessary\n\nimport forestImage from '../../images/forest_transparent.png'\nimport rockImage from '../../images/rock-mountaineern-right.png'\nimport defaultBgImage from '../../images/bg.jpg' // Default background image\n\nconst Header = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      strapiHero {\n        title\n        subTitle {\n          data {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n        image {\n          localFile {\n            publicURL\n          }\n        }\n      }\n    }\n  `)\n\n  // Destructure the necessary data from the GraphQL query\n  const { title, subTitle, image } = data.strapiHero\n  const bgImage =\n    image && image.localFile ? image.localFile.publicURL : defaultBgImage\n  const htmlContent = subTitle.data.childMarkdownRemark.html\n  const bgStyle = bgImage\n    ? `linear-gradient(to right bottom, rgba(126, 213, 111, 0.1), rgba(40, 112, 200, 0.8)), url(\"${bgImage}\")`\n    : 'none'\n\n  return (\n    <ParallaxContainer id='section-hero'>\n      <HeaderLogoBox>\n        <span className='icon-scrumhr_icon header__logo'>\n          <span className='path1'></span>\n          <span className='path2'></span>\n          <span className='path3'></span>\n          <span className='path4'></span>\n          <span className='path5'></span>\n          <span className='path6'></span>\n          <span className='path7'></span>\n          <span className='path8'></span>\n          <span className='path9'></span>\n          <span className='path10'></span>\n        </span>\n      </HeaderLogoBox>\n\n      <ParallaxBackground bgImage={bgImage} />\n\n      <ParallaxLayerForest\n        src={forestImage}\n        alt='Forest'\n      />\n      <ParallaxLayerRock\n        src={rockImage}\n        alt='Rock'\n      />\n\n      <HeaderTextBox>\n        <HeadingPrimaryMain>{title}</HeadingPrimaryMain>\n        <HeadingPrimarySub dangerouslySetInnerHTML={{ __html: htmlContent }} />\n      </HeaderTextBox>\n\n      <ButtonStyles href='#section-services'>Våra tjänster</ButtonStyles>\n    </ParallaxContainer>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nexport const HeadingSecondary = styled.h2`\n  font-size: 3.5rem;\n  text-transform: uppercase;\n  font-weight: 700;\n  display: inline-block;\n  color: white;\n  background-image: linear-gradient(to right, #7ed56f, #28b485);\n  -webkit-background-clip: text;\n  letter-spacing: 0.2rem;\n  transition: all 0.2s;\n\n  @media only screen and (max-width: 56.25em) {\n    font-size: 3rem;\n  }\n\n  @media only screen and (max-width: 37.5em) {\n    font-size: 2.5rem;\n  }\n\n  &:hover {\n    transform: skewY(2deg) skewX(15deg) scale(1.1);\n    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);\n  }\n`\n\nexport const HeadingPrimaryMain = styled.div`\n  display: block;\n  font-size: 3rem;\n  font-weight: 400;\n  letter-spacing: 1.5rem;\n  animation-name: moveInLeft;\n  animation-duration: 1s;\n  animation-timing-function: ease-out;\n  text-shadow: 0 1px 0 rgba(0, 0, 0, 0.5), 0 -1px 0 rgba(255, 255, 255, 0.2),\n    2px 2px 2px rgba(0, 0, 0, 0.5);\n\n  @media only screen and (max-width: 37.5em) {\n    .heading-primary--main {\n      letter-spacing: 1rem;\n      font-family: 5rem;\n    }\n  }\n`\nexport const HeadingPrimarySub = styled.div`\n  display: block;\n  font-size: 1.55rem;\n  font-weight: 700;\n  /* letter-spacing: 1.75rem; */\n  animation: moveInRight 1s ease-out;\n`\nexport const HeadingTertiary = styled.h3`\n  font-size: 1.6rem;\n  font-weight: 700;\n  text-transform: uppercase;\n  border-bottom: 1px solid red;\n`\n\nexport const HeadingRef = styled.h3`\n  font-size: 1.6rem;\n  font-weight: 700;\n  text-transform: uppercase;\n`\n","import styled from 'styled-components'\nimport ButtonStyles from '../styles/ButtonStyles'\nimport { HeadingSecondary as DefaultHeadingSecondary } from '../styles/HeadingStyles' // Adjust the import path as necessary\n\nexport const GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(150px, 1fr));\n  gap: 2rem;\n  max-width:1000px;\n  margin:0 auto;\n\n  @media (max-width: 960px) {\n    display:flex\nflex-direction:column;\n  }\n\n\n  @media (max-width: 56.25em) {\n    display:flex;\n    flex-direction:column;\n    grid-template-columns: 1fr;\n  }\n`\n\nexport const CardFront = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr; // Split card content into two columns\n  grid-template-rows: auto auto auto; // Four rows: image, dates, ul\n  gap: 1rem; // Gap between rows and columns\n  width: 100%;\n  min-height: 100%;\n  backface-visibility: hidden;\n  color: white;\n  background-image: radial-gradient(#96c3e8, #002f5f);\n  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);\n  perspective: 150rem;\n  top: 0;\n  left: 0;\n  transition: transform 0.8s;\n\n  @media (max-width: 56.25em) {\n    grid-template-columns: 1fr; // Single column for smaller screens\n    grid-column: span 1;\n  }\n\n  img {\n    grid-row: 1 / 2; // Image occupies the first row\n    grid-column: 1 / -1; // Image spans the entire width of the card\n    width: 100%;\n    height: auto;\n    display: block;\n    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);\n  }\n\n  ul {\n    width: 80%;\n    margin: 0 auto;\n    padding: 3rem;\n\n    grid-row: 3 / 4; // ul occupies the third row\n    grid-column: 1 / -1; // ul spans the full width of the card\n    justify-self: center; // Horizontally center within its cell\n    align-self: center; // Vertically center within its cell\n\n    li {\n      text-align: center;\n      font-size: 1.5rem;\n      padding: 1rem;\n\n      &:not(:last-child) {\n        border-bottom: 1px solid #eee;\n      }\n    }\n  }\n`\nexport const Dates = styled.span`\n  grid-row: 2 / 3; // Dates occupy the second row\n  grid-column: 1 / -1; // Dates span the full width of the card\n  text-align: center;\n  gap: 0.5rem;\n\n  span {\n    font-size: 1.5rem;\n    color: white;\n    font-weight: 700; // Makes the text bolder\n  }\n\n  span:first-of-type::after {\n    content: '-'; // Inserts the pipe character\n    margin: 0 0.5rem; // Adds a little spacing on both sides of the pipe\n  }\n`\n\nexport const CardHeading = styled.h3`\n  grid-row: 1 / span 2; // This makes the heading span both rows\n  grid-column: 1 / span 2;\n  justify-self: end;\n  align-self: center;\n  margin: 0;\n  padding: 10px;\n  z-index: 1;\n  font-size: 2.8rem;\n  font-weight: 300;\n  text-transform: uppercase;\n  text-align: right;\n  color: white;\n  background-color: ${(props) => props.theme.scrumhrBlue};\n  // Semi-transparent white background\n  padding: 0.2rem 0.5rem;\n  border-radius: 5px;\n  backdrop-filter: blur(10px); // Adding the blur effect\n  border: 1px solid rgba(255, 255, 255, 0.2); // Subtle border for reflective edge\n  text-shadow: 2px 2px 3px ${(props) => props.theme.colors.scrumhrBlue}; // Ensures the heading overlays other contents\n`\n\n// Add a new styled component for the back side\nexport const CardBack = styled(CardFront)`\n  display: grid;\n  grid-template-columns: 1fr; // Split card content into two columns\n  grid-template-rows: auto auto auto auto; // Four rows with third row taking available space\n  gap: 1rem; // Gap between rows and columns\n  width: 100%;\n  position: absolute;\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  place-items: center;\n  height: 100%;\n  cursor: default;\n`\n\nexport const CardBackHeading = styled.h3`\n  grid-row: 1;\n  grid-column: 1;\n  font-size: 2.4rem;\n  align-self: center;\n`\nexport const CardBackContentWrapper = styled.div`\n  grid-row: 2 / span 2; // Spans from row 2 to 4\n  grid-column: 1; // Takes up the first column\n  display: grid;\n  grid-template-rows: repeat(2, 1fr); // Create two rows of equal height\n  align-items: center; // Center the content vertically\n  font-size: 6rem;\n  font-weight: 100;\n`\n\nexport const CardBackContent = styled.p`\n  justify-self: center; // Center the content horizontally\n  font-size: inherit; // Inherit the font-size from the wrapper\n  font-weight: inherit; // Inherit the font-weight from the wrapper\n`\n// Extend ButtonStyles with additional grid placement styles\nexport const GridButton = styled(ButtonStyles)`\n  grid-row: 4;\n  grid-column: 1;\n  align-self: center;\n`\n\n// Wrap the entire Card component\nexport const SingleCardContainer = styled.div`\n  transform-style: preserve-3d;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n\n  grid-column: span ${(props) => props.span};\n  &:hover ${CardFront} {\n    transform: rotateY(180deg);\n  }\n  &:hover ${CardBack} {\n    transform: rotateY(0deg);\n  }\n`\nexport const HeadingSecondary = styled(DefaultHeadingSecondary)`\n  // Override hover styles\n  &:hover {\n    transform: none;\n    text-shadow: none;\n  }\n\n  // Add new styles\n  grid-column: 1 / -1; // Span all columns\n  justify-self: center; // Horizontally center\n  align-self: center; // Vertically center\n  text-align: center; // Center the text itself\n  background-color: rgba(\n    255,\n    255,\n    255,\n    0.1\n  ); // Semi-transparent white background\n  padding: 0.2rem 0.5rem;\n  border-radius: 5px;\n  backdrop-filter: blur(10px); // Adding the blur effect\n  border: 1px solid rgba(255, 255, 255, 0.2); // Subtle border for reflective edge\n  text-shadow: 2px 2px 3px ${(props) => props.theme.colors.scrumhrBlue}; // Text shadow using scrumhrBlue\n`\n","import e from\"styled-components\";import n,{useRef as r,useState as t,useEffect as o}from\"react\";import a from\"react-dom\";var c=e.div.withConfig({displayName:\"baseStyles__BaseModalBackground\"})([\"display:flex;position:fixed;top:0;left:0;width:100vw;height:100vh;z-index:30;background-color:rgba(0,0,0,0.5);align-items:center;justify-content:center;\"]);function l(e,n){(null==n||n>e.length)&&(n=e.length);for(var r=0,t=new Array(n);r<n;r++)t[r]=e[r];return t}function i(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var t,o,a=[],c=!0,l=!1;try{for(r=r.call(e);!(c=(t=r.next()).done)&&(a.push(t.value),!n||a.length!==n);c=!0);}catch(e){l=!0,o=e}finally{try{c||null==r.return||r.return()}finally{if(l)throw o}}return a}}(e,n)||function(e,n){if(e){if(\"string\"==typeof e)return l(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===r&&e.constructor&&(r=e.constructor.name),\"Map\"===r||\"Set\"===r?Array.from(e):\"Arguments\"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?l(e,n):void 0}}(e,n)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function u(){}function f(){}f.resetWarningCache=u;var p,s,d=function(){function e(e,n,r,t,o,a){if(\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"!==a){var c=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");throw c.name=\"Invariant Violation\",c}}function n(){return e}e.isRequired=e;var r={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,elementType:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n,checkPropTypes:f,resetWarningCache:u};return r.PropTypes=r,r},y=(p=function(e){e.exports=d()},p(s={exports:{}},s.exports),s.exports),m=y,b=n.createContext({}),v=b.Provider,g=b.Consumer;function h(e){var a=e.backgroundComponent,l=e.children,u=r(null),f=i(t(null),2),p=f[0],s=f[1],d=i(t(c),2),y=d[0],m=d[1];return o((function(){a&&m(a)}),[m,a]),o((function(){s(u.current)}),[s,u]),n.createElement(v,{value:{modalNode:p,BackgroundComponent:y}},l,n.createElement(\"div\",{ref:u}))}function O(){return O=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e},O.apply(this,arguments)}function w(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}h.propTypes={backgroundComponent:m.oneOfType([m.element,m.object])};var C=[\"WrapperComponent\",\"children\",\"onBackgroundClick\",\"onEscapeKeydown\",\"allowScroll\",\"beforeOpen\",\"afterOpen\",\"beforeClose\",\"afterClose\",\"backgroundProps\",\"isOpen\"];function k(e){for(var n=arguments.length,r=new Array(n>1?n-1:0),t=1;t<n;t++)r[t-1]=arguments[t];e&&e.apply(void 0,r)}function E(e){var c,l=e.WrapperComponent,u=e.children,f=e.onBackgroundClick,p=e.onEscapeKeydown,s=e.allowScroll,d=e.beforeOpen,y=e.afterOpen,m=e.beforeClose,b=e.afterClose,v=e.backgroundProps,h=void 0===v?{}:v,E=e.isOpen,j=w(e,C),S=r(null),T=r(null),_=r(!1),P=i(t(!1),2),x=P[0],A=P[1];function B(e){S.current===e.target&&f&&f(e)}return o((function(){function e(e){A(e),k(e?y:b)}function n(n){if(n){var r=n();\"function\"==typeof(null==r?void 0:r.then)?(_.current=!0,r.then((function(){e(E),_.current=!1}))):e(E)}else e(E)}x===E||_.current||n(E?d:m)}),[_,x,E,d,m,b,y]),o((function(){function e(e){\"Escape\"===e.key&&p&&p(e)}return x&&document.addEventListener(\"keydown\",e),function(){document.removeEventListener(\"keydown\",e)}}),[x,p]),o((function(){return x&&!s&&(T.current=document.body.style.overflow,document.body.style.overflow=\"hidden\"),function(){s||(document.body.style.overflow=T.current||\"\")}}),[x,s]),c=l?n.createElement(l,j,u):u,n.createElement(g,null,(function(e){var r=e.modalNode,t=e.BackgroundComponent;return r&&t&&x?a.createPortal(n.createElement(t,O({},h,{onClick:B,ref:S}),c),r):null}))}E.styled=function(){for(var r=arguments.length,t=new Array(r),o=0;o<r;o++)t[o]=arguments[o];var a=t?e.div.withConfig({displayName:\"Modal__wrap\"}).apply(void 0,t):e.div.withConfig({displayName:\"Modal__wrap\"})();return function(e){return n.createElement(E,O({WrapperComponent:a},e))}},E.propTypes={WrapperComponent:m.oneOfType([m.element,m.object]),onBackgroundClick:m.func,onEscapeKeydown:m.func,allowScroll:m.bool,beforeOpen:m.func,afterOpen:m.func,beforeClose:m.func,afterClose:m.func,backgroundProps:m.object,isOpen:m.bool};export{c as BaseModalBackground,h as ModalProvider,E as default};\n","import styled from 'styled-components'\r\nimport Modal from 'styled-react-modal'\r\nimport ButtonStyles from '../styles/ButtonStyles'\r\nimport { HeadingSecondary, HeadingTertiary } from '../styles/HeadingStyles'\r\n\r\n// This is the modal background overlay\r\nexport const ModalBackground = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  backdrop-filter: blur(10px);\r\n  transition: opacity 0.3s, visibility 0.3s;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  &.active {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n`\r\n\r\n// This is the styled modal content area\r\nexport const StyledModal = Modal.styled`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 75%;\r\n  background-color: #fff;\r\n  box-shadow: 0 2rem 4rem rgba(0, 0, 0, 0.2);\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n  z-index: 10000 !important; // Above the overlay\r\n  transition: transform 0.5s, opacity 0.5s;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  &.active {\r\n    opacity: 1;\r\n    visibility: visible;\r\n    transform: translate(-50%, -50%) scale(1);\r\n  }\r\n`\r\n\r\n// The internal container for the modal content\r\nexport const PopupContainer = styled.div`\r\n  display: grid;\r\n  grid-template-areas:\r\n    'images heading close'\r\n    'images content content'\r\n    'images button button';\r\n  grid-template-columns: 1fr 2fr auto;\r\n  grid-template-rows: auto 1fr auto;\r\n  /* gap: 1rem; */\r\n  @media (max-width: 960px) {\r\n    display:flex;\r\n    flex-direction:column-reverse;\r\n    height:500px;\r\n    overflow:scroll;\r\n  }\r\n\r\n\r\n`\r\n\r\n// Styled left column for images with grid areas\r\nexport const LeftColumn = styled.div`\r\n  grid-area: images;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nexport const ImageContainer = styled.img`\r\n  width: 100%;\r\n  height: 100%; // Change height to 100% if you want it to cover the flex container\r\n  display: block; // This ensures that the image behaves like a block-level element\r\n  object-fit: cover; // This will cover the area without changing the aspect ratio\r\n  // If you want no gap at all, ensure that the images are the same height or the container flex is set to stretch\r\n`\r\n\r\n// Styled right column for text with grid areas\r\nexport const RightColumn = styled.div`\r\n  grid-area: content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  background-image: radial-gradient(#96c3e8, #002f5f);\r\n  color: white;\r\n  padding: 3rem;\r\n`\r\n\r\n// Individual styled components for each content area\r\nexport const Heading = styled(HeadingSecondary)`\r\n  grid-area: heading;\r\n  // Override the hover styles from HeadingSecondary\r\n  &:hover {\r\n    transform: none;\r\n    text-shadow: none;\r\n  }\r\n`\r\n\r\nexport const SubHeading = styled(HeadingTertiary)`\r\n  grid-area: subheading;\r\n`\r\n\r\nexport const ContentContainer = styled.div`\r\n  grid-area: content;\r\n  font-size: 1.4rem;\r\n  column-count: 2;\r\n  column-gap: 4rem;\r\n  column-rule: 1px solid #eee;\r\n  hyphens: auto;\r\n  overflow: auto; // If your content is long, you might want to enable scrolling\r\n\r\n  p {\r\n    font-size: 1.4rem;\r\n  }\r\n\r\n  h3 {\r\n    font-size: 1.6rem;\r\n    margin-bottom: 1rem;\r\n  }\r\n`\r\n\r\nexport const GridButton = styled(ButtonStyles)`\r\n  grid-area: button;\r\n  justify-self: center; // Center the button in its cell\r\n  align-self: center;\r\n`\r\n\r\n// Styled CloseButton using grid placement instead of absolute positioning\r\nexport const CloseButton = styled.button`\r\n  grid-area: close; // Assign to the \"close\" grid area\r\n  justify-self: end; // Align to the end of the grid area\r\n  align-self: end; // Align to the top of the grid area\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 3rem;\r\n  cursor: pointer;\r\n  padding: 1rem; // Add padding for easier clicking\r\n  z-index: 10; // Ensure it's above the other content\r\n  color: white;\r\n`\r\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}","import React from 'react'\nimport {\n  StyledModal,\n  ModalBackground,\n  PopupContainer,\n  LeftColumn,\n  RightColumn,\n  ImageContainer,\n  Heading,\n  SubHeading,\n  ContentContainer,\n  CloseButton,\n  GridButton,\n} from './PopupStyles'\n\nconst Popup = ({\n  isActive,\n  onClose,\n  title,\n  conditionsHtml,\n  contentImages,\n  onSelectTitle,\n}) => {\n  // console.log('Content Images:', contentImages)\n  const image1 =\n    contentImages?.[0]?.publicURL || 'https://via.placeholder.com/150'\n  const image2 =\n    contentImages?.[1]?.publicURL || 'https://via.placeholder.com/150'\n\n  return (\n    <>\n      <ModalBackground\n        className={isActive ? 'active' : ''}\n        onClick={onClose}\n      />\n      <StyledModal\n        isOpen={isActive}\n        onBackgroundClick={onClose}\n        onEscapeKeydown={onClose}\n        className={isActive ? 'active' : ''}\n      >\n        <PopupContainer>\n          <LeftColumn>\n            <ImageContainer\n              src={image1}\n              alt='Content Image 1'\n            />\n            <ImageContainer\n              src={image2}\n              alt='Content Image 2'\n            />\n          </LeftColumn>\n          <RightColumn>\n            <CloseButton onClick={onClose}>&times;</CloseButton>\n            <Heading>{title}</Heading>\n            <SubHeading>\n              OBS! LÄS NOGA VILKOREN SOM GÄLLER FÖR DENNA PAKET\n            </SubHeading>\n            <ContentContainer\n              dangerouslySetInnerHTML={{ __html: conditionsHtml || '' }}\n            />\n            <GridButton\n              href='#section-book'\n              onClick={() => {\n                onSelectTitle(title)\n                onClose()\n              }}\n            >\n              Boka nu\n            </GridButton>\n          </RightColumn>\n        </PopupContainer>\n      </StyledModal>\n    </>\n  )\n}\n\nexport default Popup\n","import React, { useState, useEffect } from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport {\n  GridContainer,\n  SingleCardContainer,\n  CardFront,\n  CardHeading,\n  CardBack,\n  Dates,\n  CardBackHeading,\n  CardBackContent,\n  GridButton,\n  CardBackContentWrapper,\n  HeadingSecondary,\n} from './SectionCampaignStyles'\nimport Popup from './Popup'\n\nconst SectionCampaign = ({ setSelectedTitle }) => {\n  const [isActive, setIsActive] = useState(false)\n  const [popupContent, setPopupContent] = useState({})\n\n  useEffect(() => {\n    if (!isActive) {\n      setPopupContent({}) // Reset popup content when popup is closed\n    }\n  }, [isActive])\n\n  const togglePopup = (content = null) => {\n    setIsActive(!isActive)\n    if (content) {\n      setPopupContent(content)\n    }\n  }\n\n  // Inside SectionCampaign component\n  const handleSelectTitle = (title) => {\n    setSelectedTitle(title) // Assuming setSelectedTitle is passed from index.js\n  }\n\n  // Fetch data using GraphQL query\n  const data = useStaticQuery(graphql`\n    query {\n      allStrapiCampaign {\n        edges {\n          node {\n            id\n            title\n            image {\n              localFile {\n                publicURL\n              }\n            }\n            StartDate\n            EndDate\n            list {\n              list\n            }\n            Conditions {\n              data {\n                childMarkdownRemark {\n                  html\n                }\n              }\n            }\n            ContentImage {\n              localFile {\n                publicURL\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  // Get the current date\n  const currentDate = new Date()\n\n  // Calculate spans based on the number of cards and expired campaigns\n  const calculateSpan = (index, totalCards) => {\n    let remainingCards = totalCards - index\n\n    // Iterate through campaigns to find the expired ones\n    data.allStrapiCampaign.edges.forEach((edge, i) => {\n      const { node } = edge\n      const campaignEndDate = new Date(node.EndDate)\n\n      // Check if the campaign has expired\n      if (campaignEndDate < currentDate) {\n        remainingCards--\n      }\n    })\n\n    // Calculate span based on remaining cards\n    if (remainingCards === 3 && index < 2) {\n      return 2 // First two cards take up two columns each\n    }\n\n    if (remainingCards % 2 === 1 && index === totalCards - 1) {\n      return 4 // Last card spans all 4 columns if the total number of cards is odd\n    }\n\n    if (remainingCards % 2 === 0 && remainingCards < 4) {\n      return 4 / remainingCards // Even cards left but less than 4 should divide columns evenly\n    }\n\n    return 1 // By default, each card takes up one column\n  }\n\n  return (\n    <GridContainer id='section-campaigns'>\n      <HeadingSecondary>Våra kampanjer</HeadingSecondary>\n      {data.allStrapiCampaign.edges.map((edge, index) => {\n        const { node } = edge\n        const { id, title, StartDate, EndDate, list, image } = node\n        const popupData = {\n          title,\n          conditionsHtml: node.Conditions.data.childMarkdownRemark.html,\n          contentImages: node.ContentImage.map((image) => ({\n            publicURL: image.localFile.publicURL,\n          })),\n        }\n\n        return (\n          <SingleCardContainer\n            key={id}\n            span={calculateSpan(index, data.allStrapiCampaign.edges.length)}\n          >\n            <CardFront>\n              <img\n                src={image.localFile.publicURL}\n                alt={title}\n              />\n              <CardHeading>{title}</CardHeading>\n              <Dates>\n                <span>Start Date: {StartDate}</span>\n                <span>End Date: {EndDate}</span>\n              </Dates>\n              <ul>\n                {list.map((item, itemIndex) => (\n                  <li key={itemIndex}>{item.list}</li>\n                ))}\n              </ul>\n            </CardFront>\n            <CardBack>\n              <CardBackHeading>OBS!</CardBackHeading>\n              <CardBackContentWrapper>\n                <CardBackContent>Läs</CardBackContent>\n                <CardBackContent>vilkoren</CardBackContent>\n              </CardBackContentWrapper>\n              <GridButton onClick={() => togglePopup(popupData)}>\n                Mer info\n              </GridButton>\n            </CardBack>\n          </SingleCardContainer>\n        )\n      })}\n      <Popup\n        isActive={isActive}\n        onClose={() => togglePopup()}\n        {...popupContent}\n        onSelectTitle={handleSelectTitle}\n      />\n    </GridContainer>\n  )\n}\n\nexport default SectionCampaign\n","import styled from 'styled-components'\n\nexport const MainContainer = styled.div`\nmargin-top:30px;\n  transform: skewY(-7deg);\n   padding: 5rem;\n  position: relative;\n   background-image: linear-gradient(to right, #96c3e8, #002f5f); \n  border-top: 1px solid white;\n  overflow: hidden;\n  border-bottom: 1px solid white;\n   padding-bottom: 20rem;\n  // & > * {\n  //   transform: skewY(7deg); // Counteract the main container's skew\n  // }\n  @media (max-width: 56.25em) {\n    border-top: 0px;\n    border-bottom:0px;\n  }\n\n`\n\nexport const Heading = styled.h1`\n  text-align: center;\n  margin-bottom: 2rem;\n`\n\nexport const CardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr); // Define 4 columns\n  gap: 2rem; // Spacing between cards\n  transform: skewY(7deg);\n  @media (max-width: 56.25em) {\n    grid-template-columns: 1fr; // On mobile, one card per row\n  }\n`\n\nexport const Card = styled.div`\n  background: white;\n  border-radius: 10px;\n  overflow: hidden;\n  max-width: 350px;\n  padding: 25px 30px;\n  transition: transform 0.3s;\n  display: grid; /* Added */\n  place-items: center; /* Added */\n\n  &:hover {\n    transform: translateY(-1.5rem) scale(1.03);\n  }\n`\n\nexport const CardHeading = styled.h2`\n  padding-top: 1rem;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 1.6rem;\n  font-weight: 700;\n`\n\nexport const CardContent = styled.p`\n  padding: 1rem;\n  text-align: center;\n  font-size: 1.5rem;\n\n  h5 {\n    font-weight: bold;\n  }\n\n  ul {\n    list-style-type: none;\n    padding-left: 0;\n\n    li {\n      position: relative;\n      padding-left: 1.5em;\n\n      &::before {\n        content: '-';\n        position: absolute;\n        left: 0;\n        top: 50%;\n        transform: translateY(-50%);\n      }\n    }\n  }\n`\n\nexport const UCenterText = styled.div`\n  text-align: center !important; // Be cautious with using !important. It can make future CSS changes challenging.\n`\n","import styled from 'styled-components'\n\nexport const UMarginBottomBig = styled.div`\n  margin-bottom: 8rem !important;\n\n  @media only screen and (max-width: 56.25em) {\n    margin-bottom: 5rem !important;\n    @media only screen and (max-width: 56.25em) {\n      margin-bottom: 5rem !important;\n    }\n  }\n`\n\nexport const UMarginTopBig = styled.div`\n  margin-top: 8rem !important;\n`\n\nexport const UMarginTopHuge = styled.div`\n  margin-top: 10rem !important;\n`\n\nexport const UMarginBottomSmall = styled.div`\n  margin-bottom: 1.5rem !important;\n`\n\nexport const UMarginBottomMedium = styled.div`\n  margin-bottom: 4rem !important;\n\n  @media only screen and (max-width: 56.25em) {\n    margin-bottom: 3rem !important;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport {\n  MainContainer,\n  Card,\n  CardHeading,\n  CardContent,\n  UCenterText,\n  CardsContainer,\n} from './SectionFeaturesStyles'\nimport { HeadingTertiary, HeadingSecondary } from '../styles/HeadingStyles'\nimport { UMarginBottomSmall, UMarginBottomBig } from '../styles/UMarginsStyles'\nimport ButtonStyles from '../styles/ButtonStyles'\n\nconst SectionFeatures = ({ setSelectedTitle }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allStrapiService {\n        edges {\n          node {\n            title\n            sub_title\n            content {\n              data {\n                childMarkdownRemark {\n                  html\n                }\n              }\n            }\n          }\n        }\n      }\n      strapiServiceimage {\n        image {\n          localFile {\n            publicURL\n          }\n        }\n      }\n    }\n  `)\n\n  const FeatureHeadingTertiary = styled(HeadingTertiary)`\n    text-align: center;\n  `\n  const FeatureHeadingSecondary = styled(HeadingSecondary)`\n    color: #ffffff;\n    background-color: rgba(255, 255, 255, 0.1);\n\n    &:hover {\n      transform: none; // cancels any transformation on hover\n      text-shadow: none;\n    }\n  `\n  const featureBoxes = data.allStrapiService.edges.map(({ node }) => (\n    <Card key={node.title}>\n      <FeatureHeadingTertiary>\n        <UMarginBottomSmall>{node.title}</UMarginBottomSmall>\n      </FeatureHeadingTertiary>\n      <CardHeading>{node.sub_title}</CardHeading>\n      <CardContent\n        dangerouslySetInnerHTML={{\n          __html: node.content.data.childMarkdownRemark.html,\n        }}\n      />\n\n      {/* Pass the title to SectionBook */}\n      {/* <SectionBook selectedTitle={node.title} /> */}\n      <ButtonStyles\n        href='#section-book'\n        onClick={() => setSelectedTitle(node.title)}\n      >\n        Beställ\n      </ButtonStyles>\n    </Card>\n  ))\n\n  return (\n    <MainContainer id='section-services'>\n      <img\n      className='hidden md:block'\n        src={data.strapiServiceimage.image.localFile.publicURL}\n        alt='Background Image'\n        style={{\n          position: 'absolute',\n          width: '200%',\n          height: '200%',\n          top: 0,\n          left: 0,\n          zIndex: -1,\n          objectFit: 'cover',\n          objectPosition: 'center',\n        }}\n      />\n\n      <UCenterText>\n        <UMarginBottomBig>\n          <FeatureHeadingSecondary>VÅRA Tjänster</FeatureHeadingSecondary>\n        </UMarginBottomBig>\n      </UCenterText>\n      <CardsContainer >{featureBoxes}</CardsContainer>\n    </MainContainer>\n  )\n}\n\nexport default SectionFeatures\n","import styled from 'styled-components'\r\n\r\nexport const StyledAboutSection = styled.section`\r\n  background-color: #f7f7f7;\r\n  // padding: 10rem 0;\r\n  padding-top::10rem;\r\n  background-image: linear-gradient(to right, #96c3e8, #002f5f);\r\n  /* border-top: 1px solid white; */\r\n  color: white;\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n  \r\n  }\r\n`\r\n\r\n// Master Grid encompassing both columns\r\nexport const AboutGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 8rem;\r\n\r\n  background-color: #f7f7f7;\r\n  padding: 10rem 0;\r\n  margin-top: -10vh;\r\n  background-image: linear-gradient(to right, #96c3e8, #002f5f);\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    grid-template-columns: 1fr;\r\n    padding: 20rem 0;\r\n    display:flex;\r\n    flex-direction:column;\r\n    padding:20px;\r\n  }\r\n`\r\n\r\n// Content Wrapper for Text Elements on the Left\r\nexport const ContentWrapper = styled.div`\r\n  grid-column: 1;\r\n   padding-left: 8rem;\r\n\r\n  h3 {\r\n    font-size: 1.6rem;\r\n    font-weight: 700;\r\n    text-transform: uppercase;\r\n    border-bottom: 1px solid red;\r\n  }\r\n\r\n  p {\r\n    font-size: 1.6rem;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 3rem;\r\n    }\r\n  }\r\n  @media only screen and (max-width: 56.25em) {\r\n    padding-left: 0rem;\r\n    text-align:center;\r\n    p{\r\n      text-align:center;\r\n    }\r\n  }\r\n\r\n`\r\n// Base image styles for photos\r\nexport const Image = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);\r\n  border-radius: 2px;\r\n  position: relative;\r\n  z-index: 10;\r\n  transition: all 0.2s;\r\n\r\n  & img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.colors.scrumhrBlue};\r\n    box-shadow: 0 0 0 1.5rem ${({ theme }) => theme.colors.scrumhrBlue},\r\n      0 0 0 1.65rem white, 0 2.5rem 4rem rgba(0, 0, 0, 0.5); /* Combined shadows */\r\n\r\n    transform: scale(1.05) translateY(-0.5rem);\r\n    z-index: 20;\r\n  }\r\n\r\n  &:nth-child(1) {\r\n    grid-row: 1 / 3;\r\n    grid-column: 1 / 2;\r\n    z-index: 10;\r\n  }\r\n\r\n  &:nth-child(2) {\r\n    grid-row: 1 / 3;\r\n    grid-column: 2 / 3;\r\n    z-index: 20;\r\n    transform: translate(-10%, 10%);\r\n  }\r\n\r\n  &:nth-child(3) {\r\n    grid-row: 2 / 4;\r\n    grid-column: 1 / 2;\r\n    z-index: 30;\r\n    transform: translate(10%, 10%);\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    width: 100%;\r\n    box-shadow: 0 1.5rem 3rem rgba(0, 0, 0, 0.2);\r\n\r\n    &:nth-child(1),\r\n    &:nth-child(2),\r\n    &:nth-child(3) {\r\n      grid-row: auto;\r\n      grid-column: auto;\r\n    }\r\n  }\r\n`\r\n\r\n// Image composition on the Right\r\nexport const Composition = styled.div`\r\n  grid-column: 2 / span 2;\r\n  display: grid;\r\n  gap: 2rem;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-template-rows: repeat(2, auto);\r\n  place-content: center;\r\n  padding-right: 8rem;\r\n\r\n  &:hover ${Image}:not(:hover) {\r\n    transform: scale(0.95);\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n   display:flex;\r\n   flex-direction:column;\r\n\r\n  }\r\n`\r\n\r\nexport const AboutH2 = styled.h2`\r\n  font-size: 3.5rem;\r\n  padding: 1rem;\r\n  text-transform: uppercase;\r\n  font-weight: 700;\r\n  display: inline-block;\r\n  color: #ffffff; // White font color\r\n  background-color: rgba(\r\n    255,\r\n    255,\r\n    255,\r\n    0.1\r\n  ); // Semi-transparent white background\r\n\r\n  padding: 0.2rem 0.5rem;\r\n  border-radius: 5px;\r\n  backdrop-filter: blur(10px); // Adding the blur effect\r\n  border: 1px solid rgba(255, 255, 255, 0.2); // Subtle border for reflective edge\r\n  text-shadow: 2px 2px 3px ${(props) => props.theme.colors.scrumhrBlue}; // Text shadow using scrumhrBlue\r\n`\r\nexport const UCenterText = styled.div`\r\n  text-align: center !important;\r\n`\r\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport {\n  StyledAboutSection,\n  UCenterText,\n  ContentWrapper,\n  Composition,\n  AboutGrid,\n  AboutH2,\n  Image,\n} from './SectionAboutStyles'\nimport { UMarginBottomBig, UMarginBottomSmall } from '../styles/UMarginsStyles'\nimport ButtonStyles from '../styles/ButtonStyles'\nimport { StaticImage } from 'gatsby-plugin-image'\nimport styled from 'styled-components'\n\nconst SectionAbout = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      strapiAbout {\n        title\n        content {\n          data {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n        images {\n          localFile {\n            publicURL\n          }\n        }\n      }\n    }\n  `)\n\n  // console.log('GraphQL Data:', data) // Logging the entire GraphQL query result\n\n  const { title, content, images } = data.strapiAbout\n  // const aboutImages = images && images[0] ? images[0].localFile.publicURL : ''\n  const aboutImages =\n    images && images.length ? images.map((img) => img.localFile.publicURL) : []\n  // console.log('Processed Image URLs:', aboutImages)\n\n  const htmlContent = content.data.childMarkdownRemark.html\n\n  const SectionAboutButton = styled(ButtonStyles)`\n    margin-left: 8rem;\n  `\n\n  return (\n    <StyledAboutSection id='section-about'>\n      <UMarginBottomBig>\n        <UCenterText>\n          <AboutH2>{title}</AboutH2>\n        </UCenterText>\n      </UMarginBottomBig>\n      <AboutGrid>\n        <ContentWrapper>\n          <ContentWrapper dangerouslySetInnerHTML={{ __html: htmlContent }} />\n          <UMarginBottomSmall />\n          <SectionAboutButton href='#section-book'>\n            Kontakta oss\n          </SectionAboutButton>\n        </ContentWrapper>\n        <Composition>\n         \n          <Image >\n            <img className=\"hidden md:block\"\n              as={StaticImage}\n              src={aboutImages[0] || '../../images/skitrent-1-large.png'}\n              alt=''\n            />\n          </Image>\n          <Image>\n            <img className=\"hidden md:block\"\n              as={StaticImage}\n              src={aboutImages[2] || '../../images/skitrent-1-large.png'}\n              alt=''\n            />\n          </Image>\n          <Image>\n            <img className=\"hidden md:block\"\n              as={StaticImage}\n              src={aboutImages[1] || '../../images/skitrent-1-large.png'}\n              alt=''\n            />\n          </Image>\n        </Composition>\n      </AboutGrid>\n    </StyledAboutSection>\n  )\n}\n\nexport default SectionAbout\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  max-width: 100%;\r\n  height: 782px; /* Adjusted height for additional content */\r\npadding:10px;\r\n  background-size: cover;\r\n`\r\n\r\nexport const FormContainer = styled.div`\r\n  flex: 0 0 50%;\r\n  padding: 16rem;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  clip-path: polygon(0 0, 100% 0, 80% 100%, 0% 100%);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background: transparent;\r\n  border: 2px solid rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(30px);\r\n  -webkit-backdrop-filter: blur(30px);\r\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\r\n  color: #fff;\r\n \r\n  @media only screen and (max-width: 56.25em) {\r\n    padding:0px;\r\n    flex:0 0 100%;\r\n    margin:0 auto;\r\n  }\r\n\r\n`\r\n\r\nexport const FormElement = styled.div`\r\n  margin-bottom: 15px; /* Spacing between form elements */\r\n`\r\n\r\nexport const BookH2 = styled.h2`\r\n  font-size: 3.5rem;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-weight: 350;\r\n  display: inline-block;\r\n  color: #ffffff;\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  padding: 0.2rem 0.5rem;\r\n  border-radius: 5px;\r\n  backdrop-filter: blur(10px);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  text-shadow: 2px 2px 3px ${(props) => props.theme.colors.scrumhrBlue};\r\n  margin-bottom: 10rem;\r\n`\r\n\r\nexport const SectionBookContainer = styled.section`\r\n  position: relative;\r\n  height: 100%;\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    padding: 10rem 0;\r\n  }\r\n`\r\n\r\nexport const BgVideo = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  z-index: -1;\r\n  overflow: hidden;\r\n`\r\n\r\nexport const BgVideoContent = styled.video`\r\n  height: 100%;\r\n  width: 100%;\r\n  object-fit: cover;\r\n  @media only screen and (max-width: 56.25em) {\r\n    display:none;\r\n  }\r\n`\r\nexport const RadioButtonLabel = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  gap: 20px;\r\n  padding-bottom: 2rem;\r\n  font-size: 2rem;\r\n`\r\n\r\nexport const RadioButtonInput = styled.input`\r\n  appearance: none;\r\n  background-color: transparent;\r\n  border: 1px solid ${({ theme }) => theme.colors.scrumhrBlue}; // Blue outer ring for both checked and unchecked states\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 10px;\r\n  position: relative; // Needed to position the inner circle\r\n\r\n  // Remove box-shadow if it's causing an extra ring in unchecked state\r\n\r\n  &:checked {\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n      width: 10px; // Inner circle width\r\n      height: 10px; // Inner circle height\r\n      border-radius: 50%;\r\n      background-color: white; // White inner circle\r\n    }\r\n  }\r\n\r\n  // Add focus styles for accessibility\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 3px rgba(53, 152, 219, 0.5); // Example focus style\r\n  }\r\n`\r\n\r\nexport const FormInput = styled.input`\r\n  font-size: 1.5rem;\r\n  font-family: inherit;\r\n  color: inherit;\r\n  padding: 1.5rem 2rem;\r\n  border-radius: 2px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  border: none;\r\n  border-bottom: 3px solid transparent;\r\n  width: 90%;\r\n  display: block;\r\n  transition: all 0.3s;\r\n  margin-bottom: 1rem;\r\n\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);\r\n    border-bottom: 3px solid #55c57a;\r\n    background-color: white;\r\n    color: black;\r\n  }\r\n\r\n  &:focus:invalid {\r\n    border-bottom: 3px solid #ff7730;\r\n  }\r\n\r\n  &::-webkit-input-placeholder {\r\n    color: #999;\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const FormTextArea = styled.textarea`\r\n  font-size: 1.5rem;\r\n  font-family: inherit;\r\n  color: inherit;\r\n  padding: 1.5rem 2rem;\r\n  border-radius: 2px;\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  border: none;\r\n  border-bottom: 3px solid transparent;\r\n  width: 90%;\r\n  display: block;\r\n  transition: all 0.3s;\r\n\r\n  &:focus,\r\n  &:not(:placeholder-shown) {\r\n    outline: none;\r\n    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.1);\r\n    border-bottom: 3px solid #55c57a;\r\n    background-color: white; // Background turns white when field is in focus or has content\r\n    color: black; // Text color turns black when field is in focus or has content\r\n  }\r\n\r\n  &:focus:invalid {\r\n    border-bottom: 3px solid #ff7730;\r\n  }\r\n\r\n  &::-webkit-input-placeholder {\r\n    color: #999;\r\n  }\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n    width: 100%;\r\n  }\r\n`\r\n","import React, { useState, useEffect } from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport {\n  SectionBookContainer,\n  BgVideo,\n  BgVideoContent,\n  FormContainer,\n  FormElement,\n  BookH2,\n  Container,\n  RadioButtonLabel,\n  RadioButtonInput,\n  FormInput,\n  FormTextArea,\n} from './SectionBookStyles'\n\nimport ButtonStyles from '../styles/ButtonStyles'\n\nconst SectionBook = ({ selectedTitle }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      strapiFormimage {\n        image {\n          localFile {\n            publicURL\n          }\n        }\n        video {\n          localFile {\n            publicURL\n          }\n        }\n      }\n    }\n  `)\n\n  // Initialize a state variable to store the selected radio button value\n  const [selectedOption, setSelectedOption] = useState(selectedTitle)\n\n  // Use useEffect to update selectedOption when selectedTitle changes\n  useEffect(() => {\n    setSelectedOption(selectedTitle)\n  }, [selectedTitle])\n\n  const videoUrl = data?.strapiFormimage?.video?.localFile?.publicURL\n\n  if (!videoUrl) {\n    return <div>Error: Video URL not found!</div>\n  }\n\n  // Handler function for the radio button change event\n  const handleRadioChange = (event) => {\n    console.log(`Radio button clicked: ${event.target.value}`)\n    setSelectedOption(event.target.value)\n  }\n\n  return (\n    <SectionBookContainer id='section-book'>\n      <BgVideo>\n        <BgVideoContent\n          autoPlay\n          muted\n          loop\n          onLoadedData={() => console.log('Book Video Loaded')}\n          onError={() => console.log('Book Video Failed to Load')}\n        >\n          <source\n            src={videoUrl}\n            type='video/mp4'\n          />\n          Your browser is not supported!\n        </BgVideoContent>\n      </BgVideo>\n      <Container>\n        <FormContainer>\n          <BookH2>Kontakta oss</BookH2>\n          <form\n          className='lg:-mt-40 -mt-10 ml-16'\n            method='post'\n            action='http://www.skitrent.se/cgi-bin/FormMail.pl'\n            acceptCharset='ISO-8859-1'\n            onSubmit={(e) => {\n              const originalCharset = document.charset\n              document.charset = 'ISO-8859-1'\n              window.onbeforeunload = function () {\n                document.charset = originalCharset\n              }\n            }}\n          >\n            <div style={{ ...FormElement.style, display: 'flex', gap: '40px' }}>\n              <RadioButtonLabel>\n                <RadioButtonInput\n                  type='radio'\n                  name='option'\n                  value='HR'\n                  id='hr'\n                  checked={selectedOption === 'HR'}\n                  onChange={handleRadioChange}\n                />\n                <label htmlFor='hr'>HR</label>\n              </RadioButtonLabel>\n              <RadioButtonLabel>\n                <RadioButtonInput\n                  type='radio'\n                  name='option'\n                  value='Redovisning'\n                  id='redovisning'\n                  onChange={handleRadioChange}\n                  checked={selectedOption === 'Redovisning'}\n                />\n                <label htmlFor='redovisning'>Redovisning</label>\n              </RadioButtonLabel>\n            </div>\n            <div style={{ ...FormElement.style, display: 'flex', gap: '40px' }}>\n              <RadioButtonLabel>\n                <RadioButtonInput\n                  type='radio'\n                  name='option'\n                  value='Lön'\n                  id='lon'\n                  onChange={handleRadioChange}\n                  checked={selectedOption === 'Lön'}\n                />\n                <label htmlFor='lon'>Lön</label>\n              </RadioButtonLabel>\n              <RadioButtonLabel>\n                <RadioButtonInput\n                  type='radio'\n                  name='option'\n                  value='Rekrytering'\n                  id='rekrytering'\n                  onChange={handleRadioChange}\n                  checked={selectedOption === 'Rekrytering'}\n                />\n                <label htmlFor='rekrytering'>Rekrytering</label>\n              </RadioButtonLabel>\n            </div>\n            <div style={FormElement.style}>\n              <FormInput\n                type='text'\n                name='name'\n                id='name'\n                required\n                placeholder='För och efternamn'\n              />\n            </div>\n            <div style={FormElement.style}>\n              <FormInput\n                type='email'\n                name='email'\n                id='email'\n                required\n                placeholder='Epost-adress'\n              />\n            </div>\n            <div style={FormElement.style}>\n              <FormTextArea\n                name='message'\n                id='message'\n                required\n                cols='30'\n                rows='5'\n                placeholder={`${\n                  selectedTitle ? selectedTitle + '\\n' : ''\n                }Skriv ditt meddelande...`}\n              />\n            </div>\n            <ButtonStyles>Sänd</ButtonStyles>\n\n            {/* Hidden Inputs */}\n            <input\n              type='hidden'\n              name='recipient'\n              value='kontakt@skitrent.se'\n            />\n            <input\n              type='hidden'\n              name='subject'\n              id='subject'\n              value={selectedTitle ? selectedTitle : ''}\n            />\n            <input\n              type='hidden'\n              name='redirect'\n              value='http://tahwil.se/sohail/skitrent/tack.html'\n            />\n            <input\n              type='hidden'\n              name='missing_fields_redirect'\n              value='http://tahwil.se/sohail/skitrent/fel.html'\n            />\n            <input\n              type='hidden'\n              name='required'\n              value='realname,email,Message,subject'\n            />\n          </form>\n        </FormContainer>\n      </Container>\n    </SectionBookContainer>\n  )\n}\n\nexport default SectionBook\n","import styled from 'styled-components'\n\nexport const SectionStoriesContainer = styled.section`\n  position: relative;\n  padding: 15rem 0;\n  margin-top: -10rem;\n  margin-bottom: 8rem;\n\n  @media only screen and (max-width: 56.25em) {\n    padding: 10rem 0;\n  }\n`\n\nexport const BgVideo = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  z-index: -1;\n  overflow: hidden;\n`\n\nexport const BgVideoContent = styled.video`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  @media only screen and (max-width: 56.25em) {\n    display:none;\n  }\n\n`\n\nexport const UCenterText = styled.div`\n  text-align: center !important;\n`\n\nexport const StoryH2 = styled.h2`\n  font-size: 3.5rem;\n  padding: 1rem;\n  text-transform: uppercase;\n  font-weight: 700;\n  display: inline-block;\n  color: #ffffff; // White font color\n  background-color: rgba(\n    255,\n    255,\n    255,\n    0.1\n  ); // Semi-transparent white background\n  padding: 0.2rem 0.5rem;\n  border-radius: 5px;\n  backdrop-filter: blur(10px); // Adding the blur effect\n  border: 1px solid rgba(255, 255, 255, 0.2); // Subtle border for reflective edge\n  text-shadow: 2px 2px 3px ${(props) => props.theme.colors.scrumhrBlue}; // Text shadow using scrumhrBlue\n`\n\nexport const StoryShape = styled.figure`\n  width: 15rem;\n  height: 15rem;\n  float: left;\n  transform: translateX(-3rem) skewX(12deg);\n  position: relative;\n  overflow: hidden;\n  border-radius: 50%;\n\n  // Ensure images within StoryShape fit and scale appropriately\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover; // This ensures the image scales to cover the full size while maintaining its aspect ratio\n    display: block; // To remove any unwanted spacing due to inline nature of images\n  }\n\n  @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0 0)) {\n    -webkit-clip-path: circle(50% at 50% 50%);\n    clip-path: circle(50% at 50% 50%);\n    -webkit-shape-outside: circle(50% at 50% 50%);\n    shape-outside: circle(50% at 50% 50%);\n    border-radius: none;\n  }\n\n  @media only screen and (max-width: 37.5em) {\n    transform: translateX(-3rem) skewX(0);\n  }\n`\n\nexport const StoryImages = styled.div`\n  height: 100%;\n  transform: translateX(-4rem) scale(1.4);\n  backface-visibility: hidden;\n  transition: all 0.5s;\n`\n\nexport const StoryCaption = styled.figcaption`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, 20%);\n  color: white;\n  text-transform: uppercase;\n  font-size: 3rem;\n  text-align: center;\n  opacity: 0;\n  transition: all 0.5s;\n  backface-visibility: hidden;\n  background: rgba(\n    0,\n    0,\n    0,\n    0.4\n  ); /* Semi-transparent black for darker background */\n  backdrop-filter: blur(\n    10px\n  ); /* Blur the background content behind the element */\n  border-radius: 15px; /* Optional rounded corners */\n`\n\nexport const Story = styled.div`\n  width: 75%;\n  margin: 0 auto;\n  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);\n  background-color: rgba(255, 255, 255, 0.6);\n  border-radius: 3px;\n  padding: 6rem;\n  padding-left: 9rem;\n  font-size: 1.6rem;\n  transform: skewX(-12deg);\n  background-image: radial-gradient(#96c3e8, #002f5f);\n  color: white;\n  margin-bottom: 4rem;\n\n  @media only screen and (max-width: 56.25em) {\n    width: 100%;\n    padding: 4rem;\n    padding-left: 7rem;\n  }\n\n  @media only screen and (max-width: 37.5em) {\n    transform: skewX(0);\n  }\n\n  &:hover ${StoryCaption} {\n    opacity: 1;\n    transform: translate(-50%, -50%);\n  }\n\n  &:hover ${StoryImages} {\n    transform: translateX(-4rem) scale(1);\n    filter: blur(3px) brightness(80%);\n  }\n`\n\nexport const StoryText = styled.div`\n  transform: skewX(12deg);\n\n  @media only screen and (max-width: 37.5em) {\n    transform: skewX(0);\n  }\n`\n","import styled from 'styled-components'\n\n// The GridContainer is a styled div element that serves as a grid container.\n// It has a maximum width, centered margins, and uses the CSS grid layout.\n// The gap property sets the space between grid cells both vertically and horizontally.\n// At screen widths of 56.25em (approximately 900px) and below, the maximum width is set to 50rem (800px)\n// and padding is added to the left and right of the grid.\n// The 'two-columns', 'three-columns', and 'four-columns' classes are used to define the number of columns in the grid.\nconst GridContainer = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  display: grid;\n  gap: 6rem;\n\n  @media only screen and (max-width: 56.25em) {\n    max-width: 50rem;\n    padding: 0 3rem;\n    gap: 6rem;\n  }\n\n  &.two-columns {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  &.three-columns {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  &.four-columns {\n    grid-template-columns: repeat(4, 1fr);\n  }\n`\n\n// The Col is a styled div element that represents a column in the grid.\n// The 'col-span-2', 'col-span-3', and 'col-span-4' classes are used to define the number of columns the column should span.\n// At screen widths of 56.25em (approximately 900px) and below, a margin is added to the bottom of all columns except the last one.\nconst Col = styled.div`\n  &.col-span-2 {\n    grid-column: span 2;\n  }\n\n  &.col-span-3 {\n    grid-column: span 3;\n  }\n\n  &.col-span-4 {\n    grid-column: span 4;\n  }\n\n  @media only screen and (max-width: 56.25em) {\n    &:not(:last-child) {\n      margin-bottom: 6rem;\n    }\n  }\n`\nexport { GridContainer, Col }\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport {\n  SectionStoriesContainer,\n  Story,\n  BgVideo,\n  BgVideoContent,\n  UCenterText,\n  StoryH2,\n  StoryShape,\n  StoryCaption,\n  StoryText,\n} from './SectionStoriesStyles'\nimport { GridContainer } from '../styles/RowColumnStyles'\nimport { UMarginBottomBig, UMarginBottomSmall } from '../styles/UMarginsStyles'\nimport { HeadingRef } from '../styles/HeadingStyles'\n\nconst SectionStories = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allStrapiStory {\n        edges {\n          node {\n            company\n            title\n            content {\n              data {\n                childMarkdownRemark {\n                  html\n                }\n              }\n            }\n            quote\n            logo {\n              localFile {\n                publicURL\n              }\n            }\n          }\n        }\n      }\n      strapiStoryvideo {\n        video {\n          localFile {\n            url\n          }\n        }\n      }\n    }\n  `)\n\n  const videoUrl = data.strapiStoryvideo.video.localFile.url\n\n  return (\n    <SectionStoriesContainer id='section-stories'>\n      <BgVideo>\n        <BgVideoContent\n          autoPlay\n          muted\n          loop\n          onLoadedData={() => console.log('Stories Video Loaded')}\n          onError={() => console.log('Stories Video Failed to Load')}        >\n          <source\n            src={videoUrl}\n            type='video/mp4'\n          />\n          Your browser is not supported!\n        </BgVideoContent>\n      </BgVideo>\n\n      <UMarginBottomBig>\n        <UCenterText>\n          <StoryH2>Nöjda kunder</StoryH2>\n        </UCenterText>\n      </UMarginBottomBig>\n\n      {data?.allStrapiStory.edges.map(({ node }) => (\n        <GridContainer key={node.company}>\n          <Story>\n            <StoryShape>\n              <img\n                src={node.logo.localFile.publicURL}\n                alt={node.title}\n              />\n              <StoryCaption>{node.company}</StoryCaption>\n            </StoryShape>\n            <StoryText>\n              <HeadingRef>{node.title}</HeadingRef>\n              <UMarginBottomSmall\n                as='p'\n                dangerouslySetInnerHTML={{\n                  __html: node.content.data.childMarkdownRemark.html,\n                }}\n              ></UMarginBottomSmall>\n              <p>{node.quote}</p>\n            </StoryText>\n          </Story>\n        </GridContainer>\n      ))}\n    </SectionStoriesContainer>\n  )\n}\n\nexport default SectionStories\n","import styled from 'styled-components'\n\nexport const FooterStyles = styled.footer`\n  background-color: #333;\n  padding: 10rem 0;\n  font-size: 1.4rem;\n  color: #f7f7f7;\n  padding: 0rem 3rem;\n\n  @media only screen and (max-width: 56.25em) {\n    padding: 8rem 0;\n  }\n`\n\nexport const FooterLogoBox = styled.div`\n  text-align: center;\n  margin-bottom: 8rem;\n\n  @media only screen and (max-width: 56.25em) {\n    margin-bottom: 6rem;\n  }\n`\n\nexport const FooterNavigation = styled.div`\n  border-top: 1px solid #777;\n  padding-top: 2rem;\n  display: inline-block;\n\n  @media only screen and (max-width: 56.25em) {\n    width: 100%;\n    text-align: center;\n  }\n`\n\nexport const FooterList = styled.ul`\n  list-style: none;\n`\n\nexport const FooterItem = styled.li`\n  display: inline-block;\n\n  &:not(:last-child) {\n    margin-right: 1.5rem;\n  }\n`\n\nexport const FooterLink = styled.a`\n  color: #f7f7f7;\n  background-color: #333;\n  text-decoration: none;\n  text-transform: uppercase;\n  display: inline-block;\n  transition: all 0.2s;\n\n  &:hover,\n  &:active {\n    color: #55c57a;\n    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.4);\n    /*transform: rotate(5deg) scale(1.3);*/\n  }\n`\n\nexport const FooterCopyright = styled.div`\n  border-top: 1px solid #777;\n  padding-top: 2rem;\n  width: 80%;\n  float: right;\n\n  @media only screen and (max-width: 56.25em) {\n    width: 100%;\n    float: none;\n  }\n`\n","import React from 'react'\nimport {\n  FooterStyles,\n  FooterNavigation,\n  FooterList,\n  FooterItem,\n  FooterLink,\n  FooterLogoBox,\n  FooterCopyright,\n} from './FooterStyles'\n\nimport { GridContainer, Col } from '../styles/RowColumnStyles' // Adjusted the import\nimport { useStaticQuery, graphql } from 'gatsby'\n\nconst Footer = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      strapiFooter {\n        phone\n        email\n        adress\n        info {\n          data {\n            info\n          }\n        }\n      }\n    }\n  `)\n\n  const currentYear = new Date().getFullYear()\n\n  return (\n    <FooterStyles id='section-contact-info'>\n      <FooterLogoBox>\n        <span className='icon-scrumhr-message'>\n          <span className='path1'></span>\n          <span className='path2'></span>\n          <span className='path3'></span>\n          <span className='path4'></span>\n          <span className='path5'></span>\n          <span className='path6'></span>\n          <span className='path7'></span>\n          <span className='path8'></span>\n          <span className='path9'></span>\n          <span className='path10'></span>\n          <span className='path11'></span>\n          <span className='path12'></span>\n          <span className='path13'></span>\n          <span className='path14'></span>\n          <span className='path15'></span>\n          <span className='path16'></span>\n          <span className='path17'></span>\n          <span className='path18'></span>\n          <span className='path19'></span>\n          <span className='path20'></span>\n          <span className='path21'></span>\n          <span className='path22'></span>\n        </span>\n      </FooterLogoBox>\n      <GridContainer className='two-columns'>\n        {' '}\n        {/* Replaced Row with GridContainer and added a className */}\n        <Col>\n          {' '}\n          {/* Removed col='1-of-2' as it's not needed in the new grid layout */}\n          <FooterNavigation>\n            <FooterList>\n              <FooterItem>\n                <FooterLink href={`tel:${data.strapiFooter.phone}`}>\n                  Tel: {data.strapiFooter.phone}\n                </FooterLink>\n              </FooterItem>\n              <FooterItem>\n                <FooterLink href={`mailto:${data.strapiFooter.email}`}>\n                  {data.strapiFooter.email}\n                </FooterLink>\n              </FooterItem>\n              <FooterItem>\n                <FooterLink href='#section-book'>\n                  {data.strapiFooter.adress}\n                </FooterLink>\n              </FooterItem>\n              <FooterItem>\n                <FooterLink href='mailto:sohail.hasware@gmail.com'>\n                  designed by Sohail Hasware\n                </FooterLink>\n              </FooterItem>\n            </FooterList>\n          </FooterNavigation>\n        </Col>\n        <Col>\n          {' '}\n          {/* Removed col='1-of-2' as it's not needed in the new grid layout */}\n          <FooterCopyright>\n            Copyright © {currentYear}. {data.strapiFooter.info.data.info}\n            <span>\n              {' '}\n              <FooterLink href='#section-hero'>Åter till topp</FooterLink>{' '}\n            </span>\n          </FooterCopyright>\n        </Col>\n      </GridContainer>\n    </FooterStyles>\n  )\n}\n\nexport default Footer\n","import React, { useState } from 'react'\nimport Layout from '../components/Layout'\nimport Navigation from '../components/Navigation/Navigation'\nimport Header from '../components/Header/Header'\nimport SectionCampaign from '../components/Campaign/SectionCampaign'\nimport SectionFeatures from '../components/Features/SectionFeatures'\nimport SectionAbout from '../components/About/SectionAbout'\nimport SectionBook from '../components/Book/SectionBook'\nimport SectionStories from '../components/Story/SectionStories'\nimport Footer from '../components/Footer/Footer'\nimport { ModalProvider } from 'styled-react-modal'\n\nconst IndexPage = () => {\n  const [selectedTitle, setSelectedTitle] = useState(null)\n\n  return (\n    <ModalProvider>\n      <Layout>\n     \n        <Navigation />\n       \n\n       \n        <Header />\n        <div className='flex gap-40 flex-col'>\n          <SectionCampaign setSelectedTitle={setSelectedTitle} />\n          <SectionFeatures setSelectedTitle={setSelectedTitle} />\n          <SectionAbout /> \n          </div>\n          <SectionStories /> \n        \n        <SectionBook selectedTitle={selectedTitle} />\n        <Footer />\n      \n      </Layout>\n    </ModalProvider>\n  )\n}\n\nexport default IndexPage\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","templateObject_1","templateObject_2","__makeTemplateObject","cooked","raw","Object","defineProperty","value","css","createGlobalStyle","theme","colors","scrumhrBlue","navyBlue","lightBlue","breakpoints","phone","tabletPortrait","tabletLandscape","bigDesktop","GlobalStyles","reset","props","Head","_ref2","title","React","_ref","siteTitle","useStaticQuery","site","siteMetadata","ThemeProvider","Typography","NavigationContainer","styled","div","withConfig","componentId","Checkbox","Button","label","Icon","span","isChecked","Background","Nav","nav","List","ul","Item","li","StyledLink","Navigation","setIsChecked","useState","handleCheckboxChange","id","checked","onChange","htmlFor","href","text","item","index","onClick","String","padStart","buttonBaseStyles","ButtonStyles","themeColors","moveInLeft","keyframes","moveInRight","ParallaxContainer","ParallaxBackground","bgImage","ParallaxLayerForest","img","ParallaxLayerRock","HeaderLogoBox","HeaderTextBox","HeadingPrimaryMain","h1","HeadingPrimarySub","OriginalButtonStyles","Header","data","subTitle","strapiHero","localFile","publicURL","defaultBgImage","htmlContent","childMarkdownRemark","html","forestImage","rockImage","HeadingSecondary","h2","HeadingTertiary","h3","HeadingRef","GridContainer","CardFront","Dates","CardHeading","CardBack","CardBackHeading","CardBackContentWrapper","CardBackContent","GridButton","SingleCardContainer","DefaultHeadingSecondary","Symbol","iterator","call","next","done","push","return","toString","constructor","name","from","resetWarningCache","array","bigint","bool","func","number","object","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","Provider","Consumer","backgroundComponent","modalNode","BackgroundComponent","O","assign","bind","hasOwnProperty","this","C","WrapperComponent","onBackgroundClick","onEscapeKeydown","allowScroll","beforeOpen","afterOpen","beforeClose","afterClose","backgroundProps","isOpen","j","keys","indexOf","getOwnPropertySymbols","propertyIsEnumerable","T","target","document","body","overflow","ModalBackground","StyledModal","Modal","_templateObject","strings","PopupContainer","LeftColumn","ImageContainer","RightColumn","Heading","SubHeading","ContentContainer","CloseButton","button","_contentImages$","_contentImages$2","isActive","onClose","conditionsHtml","contentImages","onSelectTitle","image1","image2","setSelectedTitle","setIsActive","popupContent","setPopupContent","useEffect","togglePopup","content","currentDate","Date","calculateSpan","totalCards","remainingCards","allStrapiCampaign","edges","forEach","edge","EndDate","StartDate","list","popupData","Conditions","ContentImage","itemIndex","Popup","MainContainer","CardsContainer","Card","CardContent","UCenterText","UMarginBottomBig","UMarginBottomSmall","FeatureHeadingTertiary","FeatureHeadingSecondary","featureBoxes","allStrapiService","sub_title","strapiServiceimage","zIndex","StyledAboutSection","section","AboutGrid","ContentWrapper","Image","Composition","AboutH2","SectionAbout","strapiAbout","aboutImages","SectionAboutButton","StaticImage","Container","FormContainer","FormElement","BookH2","SectionBookContainer","BgVideo","BgVideoContent","video","RadioButtonLabel","RadioButtonInput","FormInput","FormTextArea","textarea","_data$strapiFormimage","_data$strapiFormimage2","_data$strapiFormimage3","selectedTitle","selectedOption","setSelectedOption","videoUrl","strapiFormimage","handleRadioChange","event","log","autoPlay","muted","loop","onLoadedData","method","action","acceptCharset","onSubmit","originalCharset","charset","window","onbeforeunload","gap","required","cols","rows","SectionStoriesContainer","StoryH2","StoryShape","figure","StoryImages","StoryCaption","figcaption","Story","StoryText","Col","SectionStories","strapiStoryvideo","url","allStrapiStory","company","logo","quote","FooterStyles","footer","FooterLogoBox","FooterNavigation","FooterList","FooterItem","FooterLink","FooterCopyright","Footer","currentYear","getFullYear","strapiFooter","email","adress","info","IndexPage","ModalProvider","Layout","SectionCampaign","SectionFeatures","SectionBook"],"sourceRoot":""}